# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    ######## Checkout code ########
    - name: 'Checkout repository on branch: ${{ github.REF }}'
      uses: actions/checkout@v2
  #    continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        ref: ${{ github.REF }}
        fetch-depth: 0
     ######## Setup JDK 11 ########
    - name: Set up JDK 11
      id: setup_jdk
      if: ${{ env.STACK == 'java' }}
      uses: actions/setup-java@v2
   #   continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
      with:
        java-version: '11'
        distribution: 'adopt'		
     ######## Build - Maven ########
    - name: Build with Maven
      id: build_maven
      if: ${{ env.BUILD_TECH == 'java_maven' }}
      run: |
         mvn ${{ env.MVN_ARGS }}
  #    continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
#     - uses: actions/checkout@v2
#     - name: Set up JDK 11
#       uses: actions/setup-java@v2
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#     - name: Publish package
#       run:  mvn deploy -Dregistry=https://maven.pkg.github.com/phanatic -Dtoken=$GH_TOKEN -s $GITHUB_WORKSPACE/settings.xml -Dmaven.groupId=junit -Dmaven.artifactId=junit -Dmaven.version=4.8.2 --strict-checksums
#       env:
#           GITHUB_TOKEN: ${{ github.token }}

